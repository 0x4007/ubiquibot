name: Say Hello World
on:
  issues:
    types:
      # - opened
      - labeled
      - unlabeled

jobs:
  # sayHelloWorld:
    # runs-on: ubuntu-latest
    # name: A job to say hello world
    # steps:
      # - uses: probot/example-github-action@v1
        # with:
          # token: ${{ secrets.GITHUB_TOKEN }}
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # or
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  hello_world_job:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
      # To use this repository's private action,
      # you must check out the repository
      - name: Checkout
        uses: actions/checkout@v3

      - name: GitHub App token
        uses: tibdex/github-app-token@v1.7.0
        id: get_installation_token
        with:
          app_id: ${{ secrets.UBIQUITY_BOUNTY_BOT_APP_ID }}
          private_key: ${{ secrets.UBIQUITY_BOUNTY_BOT_PRIVATE_KEY }}
      - name: Use token
        env:
          TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "The generated token is masked: ${TOKEN}"

      # - name: Print Logs
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ steps.get_installation_token.outputs.token }}
      #     script: |
      #       const fs = require("fs");
      #       const print_deployments_log = require('${{ github.workspace }}/utils/print_deployments_logs.js');
      #       await print_deployments_log({github, context, fs});

      - name: Hello world action step
        uses: ./dist # Uses an action in the root directory
        id: hello
        with:
          github-token: ${{ steps.get_installation_token.outputs.token }}
          token: steps.get_installation_token.outputs.token
          # token: ${{ secrets.GITHUB_TOKEN }}
          # who-to-greet: 'Mona the Octocat'
      # Use the output from the `hello` step
      # - name: Get the output time
        # run: echo "The time was ${{ steps.hello.outputs.time }}"